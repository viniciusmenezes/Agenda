// <auto-generated />
using AgendaApi.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgendaApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210914163914_AlteracaoTelefone")]
    partial class AlteracaoTelefone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgendaApi.Entidades.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Telefone")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contato");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "email1@email.com",
                            Nome = "Primeiro Sobrenome",
                            Telefone = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "email2@email.com",
                            Nome = "Segundo Sobrenome",
                            Telefone = 0
                        },
                        new
                        {
                            Id = 3,
                            Email = "email3@email.com",
                            Nome = "Terceiro Sobrenome",
                            Telefone = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
